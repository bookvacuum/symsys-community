import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { AreaLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight";
import { AttribCreateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCreate";
import { AttribFromTextureSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribFromTexture";
import { BVHSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/BVH";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CopNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CopNetwork";
import { DeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Delete";
import { EmptyObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EmptyObject";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { IcosahedronSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Icosahedron";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { ObjectPropertiesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ObjectProperties";
import { ParticlesSystemGpuSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ParticlesSystemGpu";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { SetChildrenSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SetChildren";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
// event
import { AnyEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Any";
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
import { PointerEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Pointer";
import { RaycastEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Raycast";
import { SceneEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Scene";
import { SetParamEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/SetParam";
// actor
import { FloatToVec3ActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/FloatToVec3";
import { MultAddActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/MultAdd";
import { OnTickActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnTick";
import { SetObjectRotationActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetObjectRotation";
// mat
import { MeshBasicMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshBasic";
import { PointsBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/PointsBuilder";
// cop
import { ImageCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/Image";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera_MAIN"): PerspectiveCameraSopNode;
  node(path: "/cameras/perspectiveCamera_DEBUG"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge1"): MergeSopNode;
  node(path: "/cameras/polarTransform1"): PolarTransformSopNode;
  node(path: "/cameras/emptyObject1"): EmptyObjectSopNode;
  node(path: "/cameras/setChildren1"): SetChildrenSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/cameras/actor1"): ActorSopNode;
  node(path: "/cameras/actor1/onTick1"): OnTickActorNode;
  node(path: "/cameras/actor1/setObjectRotation1"): SetObjectRotationActorNode;
  node(path: "/cameras/actor1/floatToVec3_2"): FloatToVec3ActorNode;
  node(path: "/cameras/actor1/multAdd1"): MultAddActorNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/areaLight1"): AreaLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(path: "/globe"): GeoObjNode;
  node(path: "/globe/BVH1"): BVHSopNode;
  node(path: "/globe/objectProperties1"): ObjectPropertiesSopNode;
  node(path: "/globe/merge1"): MergeSopNode;
  node(path: "/globe/attribCreate1"): AttribCreateSopNode;
  node(path: "/globe/sphere2"): SphereSopNode;
  node(path: "/globe/material1"): MaterialSopNode;
  node(path: "/globe/attribFromTexture1"): AttribFromTextureSopNode;
  node(path: "/globe/icosahedron1"): IcosahedronSopNode;
  node(path: "/globe/attribCreate2"): AttribCreateSopNode;
  node(path: "/globe/delete1"): DeleteSopNode;
  node(path: "/globe/MAT"): MaterialsNetworkSopNode;
  node(path: "/globe/MAT/meshBasic1"): MeshBasicMatNode;
  node(path: "/globe/MAT/pointsParticles"): PointsBuilderMatNode;
  node(path: "/globe/COP"): CopNetworkSopNode;
  node(path: "/globe/COP/image_EARTH"): ImageCopNode;
  node(path: "/globe/particlesSystemGpu1"): ParticlesSystemGpuSopNode;
  node(path: "/globe/eventsNetwork1"): EventsNetworkSopNode;
  node(path: "/globe/eventsNetwork1/raycast1"): RaycastEventNode;
  node(path: "/globe/eventsNetwork1/pointer1"): PointerEventNode;
  node(path: "/globe/eventsNetwork1/scene1"): SceneEventNode;
  node(path: "/globe/eventsNetwork1/setParam1"): SetParamEventNode;
  node(path: "/globe/eventsNetwork1/any1"): AnyEventNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_MAIN--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_MAIN--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_DEBUG--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_DEBUG--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "cameras-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "cameras-emptyObject1--type"?: ParamValueSerializedTypeMap["string"];
  "cameras-setChildren1--clearExistingChildren"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-actor1-setObjectRotation1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-actor1-setObjectRotation1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--lerp"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-setObjectRotation1--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-actor1-floatToVec3_2--x"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-floatToVec3_2--y"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-floatToVec3_2--z"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-multAdd1--value"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-multAdd1--preAdd"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-multAdd1--mult"?: ParamValueSerializedTypeMap["float"];
  "cameras-actor1-multAdd1--postAdd"?: ParamValueSerializedTypeMap["float"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-areaLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "globe--transform"?: ParamValueSerializedTypeMap["folder"];
  "globe--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "globe--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "globe--t"?: ParamValueSerializedTypeMap["vector3"];
  "globe--t-tx"?: ParamValueSerializedTypeMap["float"];
  "globe--t-ty"?: ParamValueSerializedTypeMap["float"];
  "globe--t-tz"?: ParamValueSerializedTypeMap["float"];
  "globe--tx"?: ParamValueSerializedTypeMap["float"];
  "globe--ty"?: ParamValueSerializedTypeMap["float"];
  "globe--tz"?: ParamValueSerializedTypeMap["float"];
  "globe--r"?: ParamValueSerializedTypeMap["vector3"];
  "globe--r-rx"?: ParamValueSerializedTypeMap["float"];
  "globe--r-ry"?: ParamValueSerializedTypeMap["float"];
  "globe--r-rz"?: ParamValueSerializedTypeMap["float"];
  "globe--rx"?: ParamValueSerializedTypeMap["float"];
  "globe--ry"?: ParamValueSerializedTypeMap["float"];
  "globe--rz"?: ParamValueSerializedTypeMap["float"];
  "globe--s"?: ParamValueSerializedTypeMap["vector3"];
  "globe--s-sx"?: ParamValueSerializedTypeMap["float"];
  "globe--s-sy"?: ParamValueSerializedTypeMap["float"];
  "globe--s-sz"?: ParamValueSerializedTypeMap["float"];
  "globe--sx"?: ParamValueSerializedTypeMap["float"];
  "globe--sy"?: ParamValueSerializedTypeMap["float"];
  "globe--sz"?: ParamValueSerializedTypeMap["float"];
  "globe--scale"?: ParamValueSerializedTypeMap["float"];
  "globe--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "globe--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "globe--display"?: ParamValueSerializedTypeMap["boolean"];
  "globe--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "globe-BVH1--strategy"?: ParamValueSerializedTypeMap["integer"];
  "globe-BVH1--maxDepth"?: ParamValueSerializedTypeMap["integer"];
  "globe-BVH1--maxLeafTris"?: ParamValueSerializedTypeMap["integer"];
  "globe-BVH1--verbose"?: ParamValueSerializedTypeMap["boolean"];
  "globe-BVH1--keepOnlyPosition"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--tname"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--name"?: ParamValueSerializedTypeMap["string"];
  "globe-objectProperties1--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "globe-objectProperties1--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--visible"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "globe-objectProperties1--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "globe-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "globe-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate1--group"?: ParamValueSerializedTypeMap["string"];
  "globe-attribCreate1--class"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate1--type"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate1--name"?: ParamValueSerializedTypeMap["string"];
  "globe-attribCreate1--size"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate1--value1"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "globe-attribCreate1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value2x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value2y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "globe-attribCreate1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value3z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "globe-attribCreate1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--value4w"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate1--string"?: ParamValueSerializedTypeMap["string"];
  "globe-sphere2--type"?: ParamValueSerializedTypeMap["integer"];
  "globe-sphere2--radius"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "globe-sphere2--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--open"?: ParamValueSerializedTypeMap["boolean"];
  "globe-sphere2--phiStart"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--phiLength"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--detail"?: ParamValueSerializedTypeMap["integer"];
  "globe-sphere2--center"?: ParamValueSerializedTypeMap["vector3"];
  "globe-sphere2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--centery"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--centerz"?: ParamValueSerializedTypeMap["float"];
  "globe-sphere2--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--group"?: ParamValueSerializedTypeMap["string"];
  "globe-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "globe-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "globe-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "globe-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "globe-attribFromTexture1--texture"?: ParamValueSerializedTypeMap["node_path"];
  "globe-attribFromTexture1--uvAttrib"?: ParamValueSerializedTypeMap["string"];
  "globe-attribFromTexture1--attrib"?: ParamValueSerializedTypeMap["string"];
  "globe-attribFromTexture1--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribFromTexture1--add"?: ParamValueSerializedTypeMap["float"];
  "globe-attribFromTexture1--mult"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--radius"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--detail"?: ParamValueSerializedTypeMap["integer"];
  "globe-icosahedron1--pointsOnly"?: ParamValueSerializedTypeMap["boolean"];
  "globe-icosahedron1--center"?: ParamValueSerializedTypeMap["vector3"];
  "globe-icosahedron1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--centery"?: ParamValueSerializedTypeMap["float"];
  "globe-icosahedron1--centerz"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--group"?: ParamValueSerializedTypeMap["string"];
  "globe-attribCreate2--class"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate2--type"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate2--name"?: ParamValueSerializedTypeMap["string"];
  "globe-attribCreate2--size"?: ParamValueSerializedTypeMap["integer"];
  "globe-attribCreate2--value1"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value2"?: ParamValueSerializedTypeMap["vector2"];
  "globe-attribCreate2--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value2x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value2y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3"?: ParamValueSerializedTypeMap["vector3"];
  "globe-attribCreate2--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value3z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4"?: ParamValueSerializedTypeMap["vector4"];
  "globe-attribCreate2--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4x"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4y"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4z"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--value4w"?: ParamValueSerializedTypeMap["float"];
  "globe-attribCreate2--string"?: ParamValueSerializedTypeMap["string"];
  "globe-delete1--class"?: ParamValueSerializedTypeMap["integer"];
  "globe-delete1--invert"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--objectType"?: ParamValueSerializedTypeMap["integer"];
  "globe-delete1--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--expression"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--attribType"?: ParamValueSerializedTypeMap["integer"];
  "globe-delete1--attribName"?: ParamValueSerializedTypeMap["string"];
  "globe-delete1--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "globe-delete1--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "globe-delete1--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "globe-delete1--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "globe-delete1--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "globe-delete1--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--attribString"?: ParamValueSerializedTypeMap["string"];
  "globe-delete1--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "globe-delete1--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "globe-delete1--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "globe-delete1--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "globe-delete1--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--default"?: ParamValueSerializedTypeMap["folder"];
  "globe-MAT-meshBasic1--color"?: ParamValueSerializedTypeMap["color"];
  "globe-MAT-meshBasic1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--colorr"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--colorg"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--colorb"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--opacity"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--textures"?: ParamValueSerializedTypeMap["folder"];
  "globe-MAT-meshBasic1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--map"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-meshBasic1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-meshBasic1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-meshBasic1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-meshBasic1--combine"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-meshBasic1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "globe-MAT-meshBasic1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--front"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--blending"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-meshBasic1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-meshBasic1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-meshBasic1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--default"?: ParamValueSerializedTypeMap["folder"];
  "globe-MAT-pointsParticles--size"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-pointsParticles--sizeAttenuation"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--opacity"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-pointsParticles--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "globe-MAT-pointsParticles--advanced"?: ParamValueSerializedTypeMap["folder"];
  "globe-MAT-pointsParticles--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "globe-MAT-pointsParticles--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--front"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--blending"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-pointsParticles--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-pointsParticles--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "globe-MAT-pointsParticles--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "globe-MAT-pointsParticles--texture1"?: ParamValueSerializedTypeMap["node_path"];
  "globe-COP-image_EARTH--url"?: ParamValueSerializedTypeMap["string"];
  "globe-COP-image_EARTH--reload"?: ParamValueSerializedTypeMap["button"];
  "globe-COP-image_EARTH--tencoding"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--encoding"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--mapping"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--offset"?: ParamValueSerializedTypeMap["vector2"];
  "globe-COP-image_EARTH--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--offsetx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--offsety"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "globe-COP-image_EARTH--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--repeatx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--repeaty"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--rotation"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--center"?: ParamValueSerializedTypeMap["vector2"];
  "globe-COP-image_EARTH--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--center-centery"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--centerx"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--centery"?: ParamValueSerializedTypeMap["float"];
  "globe-COP-image_EARTH--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--format"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "globe-COP-image_EARTH--type"?: ParamValueSerializedTypeMap["integer"];
  "globe-COP-image_EARTH--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "globe-particlesSystemGpu1--startFrame"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--active"?: ParamValueSerializedTypeMap["boolean"];
  "globe-particlesSystemGpu1--autoTexturesSize"?: ParamValueSerializedTypeMap["boolean"];
  "globe-particlesSystemGpu1--maxTexturesSize"?: ParamValueSerializedTypeMap["vector2"];
  "globe-particlesSystemGpu1--maxTexturesSize-maxTexturesSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--maxTexturesSize-maxTexturesSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--maxTexturesSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--maxTexturesSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--texturesSize"?: ParamValueSerializedTypeMap["vector2"];
  "globe-particlesSystemGpu1--texturesSize-texturesSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--texturesSize-texturesSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--texturesSizex"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--texturesSizey"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--dataType"?: ParamValueSerializedTypeMap["integer"];
  "globe-particlesSystemGpu1--reset"?: ParamValueSerializedTypeMap["button"];
  "globe-particlesSystemGpu1--material"?: ParamValueSerializedTypeMap["node_path"];
  "globe-particlesSystemGpu1--cursor"?: ParamValueSerializedTypeMap["vector3"];
  "globe-particlesSystemGpu1--cursor-cursorx"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--cursor-cursory"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--cursor-cursorz"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--cursorx"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--cursory"?: ParamValueSerializedTypeMap["float"];
  "globe-particlesSystemGpu1--cursorz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--mode"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-raycast1--tmouse"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--mouse"?: ParamValueSerializedTypeMap["vector2"];
  "globe-eventsNetwork1-raycast1--mouse-mousex"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--mouse-mousey"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--mousex"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--mousey"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--overrideMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--material"?: ParamValueSerializedTypeMap["node_path"];
  "globe-eventsNetwork1-raycast1--pixelColor"?: ParamValueSerializedTypeMap["color"];
  "globe-eventsNetwork1-raycast1--pixelColor-pixelColorr"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelColor-pixelColorg"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelColor-pixelColorb"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelColorr"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelColorg"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelColorb"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--pixelAlpha"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--hitThreshold"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--intersectWith"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-raycast1--pointsThreshold"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirection"?: ParamValueSerializedTypeMap["vector3"];
  "globe-eventsNetwork1-raycast1--planeDirection-planeDirectionx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirection-planeDirectiony"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirection-planeDirectionz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirectionx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirectiony"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeDirectionz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--planeOffset"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--targetType"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-raycast1--targetNode"?: ParamValueSerializedTypeMap["node_path"];
  "globe-eventsNetwork1-raycast1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "globe-eventsNetwork1-raycast1--printFoundObjectsFromMask"?: ParamValueSerializedTypeMap["button"];
  "globe-eventsNetwork1-raycast1--traverseChildren"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--tposition"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--tpositionTarget"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--position"?: ParamValueSerializedTypeMap["vector3"];
  "globe-eventsNetwork1-raycast1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--positionx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--positiony"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--positionz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--positionTarget"?: ParamValueSerializedTypeMap["param_path"];
  "globe-eventsNetwork1-raycast1--tvelocity"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--tvelocityTarget"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--velocity"?: ParamValueSerializedTypeMap["vector3"];
  "globe-eventsNetwork1-raycast1--velocity-velocityx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocity-velocityy"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocity-velocityz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocityx"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocityy"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocityz"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--velocityTarget"?: ParamValueSerializedTypeMap["param_path"];
  "globe-eventsNetwork1-raycast1--geoAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-raycast1--geoAttributeName"?: ParamValueSerializedTypeMap["string"];
  "globe-eventsNetwork1-raycast1--geoAttributeType"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-raycast1--geoAttributeValue1"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-raycast1--geoAttributeValues"?: ParamValueSerializedTypeMap["string"];
  "globe-eventsNetwork1-pointer1--active"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--element"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-pointer1--pointerdown"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--pointermove"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--pointerup"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--ctrlKey"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--altKey"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--shiftKey"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-pointer1--metaKey"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--active"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--element"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-scene1--created"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--ready"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--play"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--pause"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--tick"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--treachedTime"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-scene1--reachedTime"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-scene1--setFrameValue"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-scene1--setFrame"?: ParamValueSerializedTypeMap["button"];
  "globe-eventsNetwork1-setParam1--param"?: ParamValueSerializedTypeMap["param_path"];
  "globe-eventsNetwork1-setParam1--type"?: ParamValueSerializedTypeMap["integer"];
  "globe-eventsNetwork1-setParam1--toggle"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-setParam1--boolean"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-setParam1--number"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector2"?: ParamValueSerializedTypeMap["vector2"];
  "globe-eventsNetwork1-setParam1--vector2-vector2x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector2-vector2y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector2x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector2y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3"?: ParamValueSerializedTypeMap["vector3"];
  "globe-eventsNetwork1-setParam1--vector3-vector3x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3-vector3y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3-vector3z"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector3z"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4"?: ParamValueSerializedTypeMap["vector4"];
  "globe-eventsNetwork1-setParam1--vector4-vector4x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4-vector4y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4-vector4z"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4-vector4w"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4x"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4y"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4z"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--vector4w"?: ParamValueSerializedTypeMap["float"];
  "globe-eventsNetwork1-setParam1--increment"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-setParam1--string"?: ParamValueSerializedTypeMap["string"];
  "globe-eventsNetwork1-setParam1--execute"?: ParamValueSerializedTypeMap["button"];
  "globe-eventsNetwork1-any1--active"?: ParamValueSerializedTypeMap["boolean"];
  "globe-eventsNetwork1-any1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
}
